html_files = [
	'accounting',
	'accounting_storageplugins',
	'acct_gather_energy_plugins',
	'acct_gather_profile_plugins',
	'add',
	'api',
	'authplugins',
	'bb_plugins',
	'big_sys',
	'burst_buffer',
	'cgroups',
	'checkpoint_blcr',
	'checkpoint_plugins',
	'classic_fair_share',
	'cons_res',
	'cons_res_share',
	'containers',
	'contributor',
	'core_spec',
	'core_spec_plugins',
	'cpu_management',
	'cray',
	'cred_plugins',
	'disclaimer',
	'dist_plane',
	'documentation',
	'download',
	'elasticsearch',
	'elastic_computing',
	'ext_sensorsplugins',
	'faq',
	'federation',
	'gang_scheduling',
	'gres',
	'gres_design',
	'gres_plugins',
	'hdf5_profile_user_guide',
	'heterogeneous_jobs',
	'high_throughput',
	'intel_knl',
	'jobacct_gatherplugins',
	'job_array',
	'job_container_plugins',
	'job_exit_code',
	'job_launch',
	'job_submit_plugins',
	'jobcompplugins',
	'launch_plugins',
	'licenses',
	'fair_tree',
	'mail',
	'man_index',
	'mc_support',
	'mcs',
	'mcs_plugins',
	'meetings',
	'mpi_guide',
	'mpiplugins',
	'multi_cluster',
	'news',
	'node_features_plugins',
	'overview',
	'pam_slurm_adopt',
	'platforms',
	'plugins',
	'power_mgmt',
	'power_save',
	'power_plugins',
	'preempt',
	'preemption_plugins',
	'priority_multifactor',
	'priority_multifactor3',
	'priority_plugins',
	'proctrack_plugins',
	'programmer_guide',
	'prolog_epilog',
	'publications',
	'qos',
	'quickstart_admin',
	'quickstart',
	'reservations',
	'resource_binding',
	'resource_limits',
	'rosetta',
	'route_plugin',
	'rpc',
	'sched_config',
	'schedplugins',
	'select_design',
	'selectplugins',
	'slurm',
	'slurmctld_plugstack',
	'slurm_ug_agenda',
	'slurm_ug_cfp',
	'switchplugins',
	'taskplugins',
	'team',
	'testimonials',
	'topology',
	'topology_plugin',
	'tres',
	'troubleshoot',
	'tutorials',
	'user_permissions',
	'wckey',
]


html_dir = join_paths(get_option('datadir'), package + '-' + slurm_version_string, 'html')
shtml2html_py = join_paths(meson.current_source_dir(), 'shtml2html.py')
foreach item : html_files
	shtml = item + '.shtml'
	shtml_full = join_paths(meson.current_source_dir(), shtml)
	html = item + '.html'
	custom_target(
		html,
		command : [
			shtml2html_py,
			slurm_major_minor,
			# Pass in current build dir (build/doc/html) to shtml2html_py so
			# it can create the file where the install command can find it later
			'output_dir',
			meson.current_build_dir(),
			shtml_full
		],
		input: [shtml],
		output : [html],
		install: true,
		install_dir: html_dir,
	)
endforeach

html_data = [
	'allocation_pies.gif',
	'arch.gif',
	'coding_style.pdf',
	# TODO: Figure out what needs to happen for configurator.[easy.]html.in
	# 'configurator.html',
	# 'configurator.easy.html',
	'entities.gif',
	'example_usage.gif',
	'fonts.css',
	'fonts.ttf',
	'hdf5_task_attr.png',
	'hdf5_job_outline.png',
	'ibm_pe_fig1.png',
	'ibm_pe_fig2.png',
	'jquery.min.js',
	'k_function.gif',
	'mc_support.gif',
	'plane_ex1.gif',
	'plane_ex2.gif',
	'plane_ex3.gif',
	'plane_ex4.gif',
	'plane_ex5.gif',
	'plane_ex6.gif',
	'plane_ex7.gif',
	'reset.css',
	'slurm_logo.png',
	'schedmd.png',
	'slurm.css',
	'Slurm_Entity.pdf',
	'Slurm_Individual.pdf',
	'squeue_color.png',
	'style.css',
	'topo_ex1.gif',
	'topo_ex2.gif',
	'tutorial_intro_files.tar',
	'usage_pies.gif',
]
install_data(html_data, install_dir: html_dir)